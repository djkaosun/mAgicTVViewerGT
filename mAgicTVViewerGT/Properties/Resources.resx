<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="General_Apply" xml:space="preserve">
    <value>適用(_A)</value>
  </data>
  <data name="General_BaseSetting" xml:space="preserve">
    <value>基本設定</value>
  </data>
  <data name="General_Cancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="General_DayOfWeek" xml:space="preserve">
    <value>曜日</value>
  </data>
  <data name="General_Extend" xml:space="preserve">
    <value>拡張</value>
  </data>
  <data name="General_FilterSetting" xml:space="preserve">
    <value>フィルター設定</value>
  </data>
  <data name="General_FiltrateCriteria" xml:space="preserve">
    <value>フィルター条件</value>
  </data>
  <data name="General_Friday" xml:space="preserve">
    <value>金</value>
  </data>
  <data name="General_Monday" xml:space="preserve">
    <value>月</value>
  </data>
  <data name="General_Name" xml:space="preserve">
    <value>名前</value>
  </data>
  <data name="General_NewFilter" xml:space="preserve">
    <value>新しいフィルター</value>
  </data>
  <data name="General_OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="General_Others" xml:space="preserve">
    <value>その他</value>
  </data>
  <data name="General_Saturday" xml:space="preserve">
    <value>土</value>
  </data>
  <data name="General_Standard" xml:space="preserve">
    <value>標準</value>
  </data>
  <data name="General_StartDate" xml:space="preserve">
    <value>日付</value>
  </data>
  <data name="General_StartTimeBand" xml:space="preserve">
    <value>時間帯</value>
  </data>
  <data name="General_Sunday" xml:space="preserve">
    <value>日</value>
  </data>
  <data name="General_Thursday" xml:space="preserve">
    <value>木</value>
  </data>
  <data name="General_Title" xml:space="preserve">
    <value>タイトル</value>
  </data>
  <data name="General_Tuesday" xml:space="preserve">
    <value>火</value>
  </data>
  <data name="General_Unviewed" xml:space="preserve">
    <value>未視聴</value>
  </data>
  <data name="General_Viewed" xml:space="preserve">
    <value>視聴済み</value>
  </data>
  <data name="General_ViewHistory" xml:space="preserve">
    <value>視聴状況</value>
  </data>
  <data name="General_Wednesday" xml:space="preserve">
    <value>水</value>
  </data>
  <data name="Grid_LengthMinute" xml:space="preserve">
    <value>長さ(分)</value>
  </data>
  <data name="Grid_StartDateTime" xml:space="preserve">
    <value>開始日時</value>
  </data>
  <data name="Grid_Station" xml:space="preserve">
    <value>放送局</value>
  </data>
  <data name="Grid_Title" xml:space="preserve">
    <value>タイトル</value>
  </data>
  <data name="Grid_Viewed" xml:space="preserve">
    <value>○</value>
  </data>
  <data name="Ribbon_FileTab" xml:space="preserve">
    <value>ファイル</value>
    <comment>[ファイル] リボンの名前</comment>
  </data>
  <data name="Ribbon_HomeTab" xml:space="preserve">
    <value>ホーム</value>
    <comment>[ホーム] リボンの名前</comment>
  </data>
  <data name="Status_All" xml:space="preserve">
    <value>全</value>
    <comment>ステータス バー</comment>
  </data>
  <data name="Status_Filtered" xml:space="preserve">
    <value>表示中</value>
    <comment>ステータス バー</comment>
  </data>
  <data name="Tree_Add" xml:space="preserve">
    <value>フィルターの新規作成</value>
  </data>
  <data name="Tree_AddOthers" xml:space="preserve">
    <value>「その他」の新規作成</value>
  </data>
  <data name="Tree_Delete" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="Tree_Edit" xml:space="preserve">
    <value>編集</value>
  </data>
  <data name="Tree_TopItem" xml:space="preserve">
    <value>すべての番組</value>
    <comment>ツリーのルート</comment>
  </data>
  <data name="Window_OpenFolder" xml:space="preserve">
    <value>録画フォルダーを開く</value>
  </data>
  <data name="Tree_AddFolder" xml:space="preserve">
    <value>フォルダーの新規作成</value>
  </data>
  <data name="General_NewFolder" xml:space="preserve">
    <value>新しいフォルダー</value>
  </data>
  <data name="General_Confirm" xml:space="preserve">
    <value>確認</value>
  </data>
  <data name="List_DeleteProgram" xml:space="preserve">
    <value>番組の削除</value>
  </data>
  <data name="List_MakeUnviewed" xml:space="preserve">
    <value>未視聴にする</value>
  </data>
  <data name="List_MakeViewed" xml:space="preserve">
    <value>視聴済みにする</value>
  </data>
  <data name="List_SelectAll" xml:space="preserve">
    <value>すべて選択</value>
  </data>
  <data name="List_View" xml:space="preserve">
    <value>視聴する</value>
  </data>
  <data name="Ribbon_100Percent" xml:space="preserve">
    <value>100%</value>
  </data>
  <data name="Ribbon_Enlarge" xml:space="preserve">
    <value>拡大</value>
  </data>
  <data name="Ribbon_EnlargeReduce" xml:space="preserve">
    <value>拡大/縮小</value>
  </data>
  <data name="Ribbon_Reduce" xml:space="preserve">
    <value>縮小</value>
  </data>
  <data name="Window_Close" xml:space="preserve">
    <value>閉じる</value>
  </data>
  <data name="Window_Help" xml:space="preserve">
    <value>ヘルプ</value>
  </data>
  <data name="Window_VersionInfo" xml:space="preserve">
    <value>バージョン情報</value>
  </data>
</root>